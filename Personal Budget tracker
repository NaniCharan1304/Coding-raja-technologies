import csv
from datetime import datetime

class BudgetTracker:
    def __init__(self, filename='transactions.csv'):
        self.filename = filename
        self.transactions = self.load_transactions()

    def load_transactions(self):
        transactions = []
        try:
            with open(self.filename, mode='r') as file:
                reader = csv.DictReader(file)
                for row in reader:
                    row['amount'] = float(row['amount'])
                    transactions.append(row)
        except FileNotFoundError:
            pass
        return transactions

    def save_transactions(self):
        with open(self.filename, mode='w', newline='') as file:
            fieldnames = ['date', 'type', 'category', 'amount']
            writer = csv.DictWriter(file, fieldnames=fieldnames)
            writer.writeheader()
            for transaction in self.transactions:
                writer.writerow(transaction)

    def add_transaction(self, type, category, amount):
        transaction = {
            'date': datetime.now().strftime('%Y-%m-%d %H:%M:%S'),
            'type': type,
            'category': category,
            'amount': amount
        }
        self.transactions.append(transaction)
        self.save_transactions()

    def calculate_budget(self):
        income = sum(t['amount'] for t in self.transactions if t['type'] == 'income')
        expenses = sum(t['amount'] for t in self.transactions if t['type'] == 'expense')
        return income - expenses

    def analyze_expenses(self):
        categories = {}
        for t in self.transactions:
            if t['type'] == 'expense':
                if t['category'] in categories:
                    categories[t['category']] += t['amount']
                else:
                    categories[t['category']] = t['amount']
        return categories

    def display_menu(self):
        print("\nPersonal Budget Tracker")
        print("1. Add Income")
        print("2. Add Expense")
        print("3. View Budget")
        print("4. Analyze Expenses")
        print("5. Exit")

    def run(self):
        while True:
            self.display_menu()
            choice = input("Choose an option: ")
            if choice == '1':
                category = input("Enter income category: ")
                amount = float(input("Enter income amount: "))
                self.add_transaction('income', category, amount)
            elif choice == '2':
                category = input("Enter expense category: ")
                amount = float(input("Enter expense amount: "))
                self.add_transaction('expense', category, amount)
            elif choice == '3':
                budget = self.calculate_budget()
                print(f"Remaining budget: ${budget:.2f}")
            elif choice == '4':
                expenses = self.analyze_expenses()
                for category, amount in expenses.items():
                    print(f"{category}: ${amount:.2f}")
            elif choice == '5':
                break
            else:
                print("Invalid choice. Please try again.")

if __name__ == '__main__':
    tracker = BudgetTracker()
    tracker.run()
